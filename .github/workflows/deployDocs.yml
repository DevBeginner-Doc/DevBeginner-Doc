# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deploy Docs lastest to Server

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout lastest code
      uses: actions/checkout@v4
    
    - name: Use Node.js 20 to build
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Cache Node Modules
      id: cache-node-modules
      uses: actions/cache@v4
      with:
         path: node_modules
         key: node-modules-${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

    # true代表缓存命中，node_modules没有变化，而''代表没有命中，node_modules发生变化
    - name: Debug Cache Hit
      run: echo "${{ steps.cache-node-modules.outputs.cache-hit }}"

    - name: Install Node Packages
      if: steps.cache-node-modules.outputs.cache-hit == ''
      run: npm install

    - run: npm run docs:build --if-present

    - name: Deploy package to ArkStation
      uses: cross-the-world/ssh-scp-ssh-pipelines@latest
      with:
        host: ${{ secrets.DC_HOST }}
        user: ${{ secrets.DC_USER }}
        pass: ${{ secrets.DC_PASS }}
        port: ${{ secrets.DC_PORT }}
        connect_timeout: 10s
        first_ssh: |
          rm -rf /var/www/html-doc/dist
        scp: |
          ./dist => /var/www/html-doc/
        last_ssh: |
          sudo systemctl reload apache2.service
